{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { AfterViewChecked, AfterViewInit, Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport * as ace from 'ace-builds';\nimport { HttpClient } from '@angular/common/http';\ninterface Port {\n  name: string;\n  description: string;\n}\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy, AfterViewInit{\n\n  public codeText = '';\n  public editorId = '1111';\n  public isAdd: boolean;\n  public isEdit: boolean;\n  public name: string;\n  public dataIn: string[] = [];\n\n  public dataOut: string[] = [];\n  public common: any;\n  public eventIn: string[] = [];\n\n  public eventOut: string[] = [];\n  public subsription: Subscription[] = [];\n  public objTypeArray: any[] = [];\n  public err: string;\n  public categories = [];\n  public category: string;\n  public syncSuccess = false;\n  public syncFail = false;\n  public saveModal = false;\n  public editor: any;\n  public edited: boolean;\n  public filterCategory = [];\n  \n  public syntax = {\n    msg: '',\n    show: false,\n  };\n  public model = {\n    name: 'Custom FB',\n    path: ''\n  };\n  private defaultTemplate = `\nfrom pub import getTopic,types\n\nclass CCTARoSDK_Multi_Robot_MoveTrajJoint:\n    __description__ = {\n        'IN_EVENT': [\"INIT\", \"START\"],\n        'OUT_EVENT': [\"INIT_OK\", \"DONE\"],\n        'IN_DATA': [\"ROBOT_NAME\", \"TRAJECTORY\", \"CS_REF_VALUE\", \"CS_TOOL_VALUE\"],\n        'OUT_DATA': [\"ERROR\"]\n    }\n    def __init__(self, name):\n        self.Name = name\n        self.topic = getTopic()\n        for ports in  CCTARoSDK_Multi_Robot_MoveTrajJoint.__description__.values():\n            for port in ports:\n                self.topic.subscribe(self.Name +\".\"+ port)\n\n    def INPUT_INIT(self):\n        #example\n        self.OUTPUT_INIT_OK(0)\n\n    def INPUT_START(self, robot_name, trajectory, cs_ref_value, cs_tool_value):\n        # import time\n        # time.sleep(1)\n        self.OUTPUT_DONE(0)\n\n    def OUTPUT_INIT_OK(self, error):\n        pass\n\n    def OUTPUT_DONE(self, error):\n        pass\n\n    def OUTPUT_ERROR(self, error):\n        pass\n\n    def __port_type__(PORTNAME):\n        for item in types:\n            if CCTARoSDK_Multi_Robot_MoveTrajJoint.__description__[item].__contains__(PORTNAME):\n                return item\n            else:\n                return \"unknown type\"\n\n\n  `;\n  constructor(\n    private http: HttpClient,\n  ) {\n\n  }\n\n  async ngOnInit(): Promise<void> {\n\n    // check grammer to do\n    // if (this.codeText) {\n    //   let res = (await this.systemservice.checkGrammer(this.codeText).toPromise());\n    //   if (res.returnCode !== 0) {\n    //     this.syntax.show = true;\n    //     this.syntax.msg = res.data.message\n    //   }\n    // }\n  }\n\n  ngOnDestroy(): void {\n    this.subsription.forEach(sub => sub.unsubscribe());\n\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.editor = ace.edit(this.editorId);\n      this.editor.on('input', () => {\n        this.refreshCode();\n        console.log('clean?', this.editor.session.getUndoManager().isClean());\n        this.edited = !this.editor.session.getUndoManager().isClean();\n      });\n      this.editor.setTheme('ace/theme/github');      // twilight  eclipse  github\n      // this.editor.session.setMode(\"ace/mode/python\");\n      const mode: string = 'ace/mode/' + 'python';\n      this.editor.session.setMode(mode);\n      this.editor.setValue(this.codeText);\n      this.editor.setOptions({\n        wrap: false,\n        fontSize: 16,\n        tabSize: 4,\n        // active auto prompt\n        enableSnippets: true,\n        enableBasicAutocompletion: true,\n        enableLiveAutocompletion: true,\n        mergeUndoDeltas: true,\n        // autoScrollEditorIntoView: true,\n      });\n      this.editor.session.getUndoManager().markClean();\n\n    }, 50);\n  }\n\n  public undo(): void {\n    const undoManager = this.editor.session.getUndoManager();\n    undoManager.undo();\n  }\n\n  public redo(): void {\n    const undoManager = this.editor.session.getUndoManager();\n    undoManager.redo();\n  }\n\n  public save(): void {\n    this.editor.session.getUndoManager().markClean();\n  }\n\n  public setDefaultText(): void {\n    const codeText = this.editor.getValue();\n    let text: string = codeText ? codeText : this.defaultTemplate;\n    // ------set class name start------\n    const fbName = this.getFBname(text);\n    if (!fbName) {\n      console.error('Error Class Name.');\n      return;\n    }\n    text = text.replace(new RegExp(fbName, 'g'), this.getClassName());\n    // ------set class name end------\n\n    // ------set event in port start ------\n    const eventInstr = this.eventIn\n      // event1 => \"event1\"\n      .map(s => `\"${s}\"`)\n      // [\"event1\", \"event2\"] => \"event1\",\"event2\"\n      .join(', ');\n    text = text.replace(/'IN_EVENT': \\[(.*)\\],/, `'IN_EVENT': [${eventInstr}],`);\n    // ------set event in port end ------\n\n    // ------set event out port start ------\n    const eventOutstr = this.eventOut\n      .map(s => `\"${s}\"`)\n      .join(', ');\n    text = text.replace(/'OUT_EVENT': \\[(.*)\\],/, `'OUT_EVENT': [${eventOutstr}],`);\n    // ------set event out port end ------\n\n    // ------set data in port start ------\n\n    const dataInstr = this.dataIn\n      .map(s => `\"${s}\"`)\n      .join(', ');\n    text = text.replace(/'IN_DATA': \\[(.*)\\],/, `'IN_DATA': [${dataInstr}],`);\n\n    // ------set data in port end ------\n\n    // ------set data out port start ------\n    const dataOutstr = this.dataOut\n    .map(s => `\"${s}\"`)\n    .join(', ');\n    text = text.replace(/'OUT_DATA': \\[(.*)\\]/, `'OUT_DATA': [${dataOutstr}]`);\n    // ------set data out port end ------\n\n    // ------set input_ start ------\n    const dataInString = this.dataIn.map(s => s.toLocaleLowerCase()).join(', ');\n    if (this.dataIn.length === 0) {\n      text = text.replace(/def INPUT_START\\(self(, )?.*\\):/, `def INPUT_START\\(self):`);\n    } else {\n      text = text.replace(/def INPUT_START\\(self(, )?.*\\):/, `def INPUT_START\\(self, ${dataInString}):`);\n    }\n\n    // const res = this.setDefaultTemplate(input, output, codeText);\n    this.editor.setValue(text);\n  }\n  public onNameChange(): void {\n    this.setDefaultText();\n  }\n  private getClassName(): string {\n    return this.model.name.replace(/ /g, '_').toLocaleUpperCase();\n  }\n  private getFBname(text): string {\n    const match = text.match(/class (.*):/);\n    if (match) {\n      return match[1];\n    }\n    return '';\n  }\n  public export(): void {\n    this.http.post('http://localhost:3000/add',\n    {str: this.editor.getValue(), name: this.getClassName(), path: this.model.path}).subscribe(data => {\n      alert(JSON.stringify((data as any).msg));\n    });\n  }\n  public portName(): string {\n    const { dataIn, dataOut } = this;\n    let length = 1;\n    let data = `Data${length}`;\n    while (dataIn.includes(data) || dataOut.includes(data)) {\n      length = length + 1;\n      data = `Data${length}`;\n    }\n    return data;\n  }\n  public eventportName(): string {\n    const { eventIn, eventOut } = this;\n    let length = 1;\n    let data = `Event${length}`;\n    while (eventIn.includes(data) || eventOut.includes(data)) {\n      length = length + 1;\n      data = `Event${length}`;\n    }\n    return data;\n  }\n  public addDataIn(): void {\n    const data = this.portName();\n    this.dataIn.push(data);\n    this.setDefaultText();\n  }\n\n  public addDataOut(): void {\n    const data = this.portName();\n    this.dataOut.push(data);\n    this.setDefaultText();\n  }\n  public addEventIn(): void {\n    const data = this.eventportName();\n    this.eventIn.push(data);\n    this.setDefaultText();\n  }\n\n  public addEventOut(): void {\n    const data = this.eventportName();\n    this.eventOut.push(data);\n    this.setDefaultText();\n  }\n  public deleteData(type, index): void {\n    if (type === 0) {\n      this.dataIn.splice(index, 1);\n      this.setDefaultText();\n    } else {\n      this.dataOut.splice(index, 1);\n      this.setDefaultText();\n    }\n  }\n  public deleteEvent(type, index): void {\n    if (type === 0) {\n      this.eventIn.splice(index, 1);\n      this.setDefaultText();\n    } else {\n      this.eventOut.splice(index, 1);\n      this.setDefaultText();\n    }\n  }\n  public async checkBeforeSave(): Promise<void> {\n    // let result = await this.checkGrammer();\n    // if (result.returnCode !== 0) {\n    //   this.dialogService.confirmDialog({\n    //     title: 'Warning',\n    //     error: true,\n    //     text: this.translate.instant('edit.x_function.save_error_01'),\n    //     okcallback: () => {\n    //       this.saveXFunction();\n    //     },\n    //     cancelcallback: () => {\n    //       // this.common.modal.destroy();\n    //     },\n    //     okText: 'OK',\n    //     cancelText: 'Cancel',\n    //   });\n    //   // this.message.error(this.translate.instant('edit.x_function.save_error_01'));\n    //   this.syntax.show = true;\n    //   this.syntax.msg = result.data.message;\n    //   return;\n    // } else {\n    //   this.saveXFunction();\n    // }\n  }\n\n  public async saveXFunction(): Promise<void> {\n    // let result = this.checkSynchronize();\n    // myLog(result);\n    // if (result === false) {\n    //   this.message.error(this.translate.instant('edit.x_function.save_error_02'));\n    //   return;\n    // }\n    // result = this.checkCodeLength();\n    // if (!result) return;\n    // if (this.isEdit) {\n    //   this.editTemplate();\n    //   return;\n    // }\n    // if (this.isAdd) {\n    //   this.saveSkillas();\n    //   return;\n    // }\n\n    // let { name, category, dataIn, dataOut } = this;\n    // let codeText = this.editor.getValue();\n    // let ports = [];\n    // let eventIn = {\n    //   port_name: 'eventIn',\n    //   port_label: 'Start',\n    //   port_type: NodeType.EVENT_IN\n    // };\n    // let eventOut = {\n    //   port_name: 'eventOut',\n    //   port_label: 'Done',\n    //   port_type: NodeType.EVENT_OUT\n    // };\n    // ports.push(eventIn, eventOut);\n\n    // dataIn.forEach((item, index) => {\n    //   ports.push({\n    //     port_name: item,\n    //     port_label: item,\n    //     port_type: NodeType.DATA_IN\n    //   });\n    // });\n    // dataOut.forEach((item, index) => {\n    //   ports.push({\n    //     port_name: item,\n    //     port_label: item,\n    //     port_type: NodeType.DATA_OUT\n    //   });\n    // });\n\n    // let functionInfo = {name, category, codeText, ports};\n    // let res = this.contextService.updateXfunction(this.common.contextParam, functionInfo, this.common.nodeId);\n    // myLog(res);\n\n    // let changedInfo = {\n    //   changedPorts: res.data,\n    //   skillId: this.common.nodeId\n    // };\n    // this.updateNodePort(changedInfo);\n    // this.common.modal.destroy();\n  }\n\n  public updatePortService(increasePorts, decreasePorts, skillId, isLeftArray): void {\n  //   this.emitService.updatePort.next({\n  //     increasePorts,\n  //     decreasePorts,\n  //     skillId,\n  //     isLeftArray,\n  //   });\n  }\n\n  public updateNodePort(changedInfo): void {\n    const {skillId, changedPorts} = changedInfo;\n\n    if (changedPorts.dataIn.type === 1) {\n    this.updatePortService([], changedPorts.dataIn.portArr, skillId, true);\n    } else {\n    this.updatePortService(changedPorts.dataIn.portArr, [], skillId, true);\n    }\n\n    if (changedPorts.dataOut.type === 1) {\n    this.updatePortService([], changedPorts.dataOut.portArr, skillId, false);\n    } else {\n    this.updatePortService(changedPorts.dataOut.portArr, [], skillId, false);\n    }\n  }\n\n\n  public saveSkillas(): void {\n    // this.name = '';\n    // this.categories = await this.categoryService.getPaletteData();\n    // this.filterCategory = this.categories;\n    // myLog(this.categories);\n    // this.saveModal = true;\n  }\n\n  public async editTemplate(): Promise<void> {\n    // let ports = [];\n    // let eventIn = {\n    //   port_name: 'eventIn',\n    //   port_label: 'start',\n    //   port_type: NodeType.EVENT_IN\n    // };\n    // let eventOut = {\n    //   port_name: 'eventOut',\n    //   port_label: 'done',\n    //   port_type: NodeType.EVENT_OUT\n    // };\n    // ports.push(eventIn, eventOut);\n\n    // this.dataIn.forEach((item, index) => {\n    //   ports.push({\n    //     port_name: item,\n    //     port_label: item,\n    //     port_type: NodeType.DATA_IN\n    //   });\n    // });\n    // this.dataOut.forEach((item, index) => {\n    //   ports.push({\n    //     port_name: item,\n    //     port_label: item,\n    //     port_type: NodeType.DATA_OUT\n    //   });\n    // });\n\n    // let name = this.name;\n    // let category = this.category;\n    // let codeText = this.editor.getValue();\n\n    // this.contextService.saveXfunctionToPalette(this.common.contextParam, name, category, ports, codeText).then((res) => {\n    //   this.message.create('success', this.translate.instant('edit.x_function.create_success'));\n    //   this.saveModal = false;\n    //   this.destroyModal();\n\n    //   myLog(err);\n    //   this.saveModal = false;\n    //   this.destroyModal();\n    // });\n    // this.emitService.eventEmitCreateNewSkill.emit({\n    //   refreshPalette: true,\n    // });\n  }\n\n\n  public checkSynchronize(): boolean {\n    const codeText = this.editor.getValue();\n    const { dataIn, dataOut } = this;\n    let result;\n\n    const res = this.getParamByCode(codeText);\n    if (!res) {\n      return false;\n    }\n    if (res.dataIn.join() === dataIn.join() && res.dataOut.join() === dataOut.join()) {\n      result = true;\n    } else {\n      result = false;\n    }\n    return result;\n  }\n\n  public async checkGrammer(): Promise<void> {\n    // let codeText = this.editor.getValue();\n    // let res = (await this.systemservice.checkGrammer(codeText).toPromise());\n    // // if (res.returnCode === 0) {\n    // //   return true;\n    // // } else {\n    // //   return false;\n    // // }\n    // return res;\n  }\n\n  public checkCodeLength(): boolean {\n    const codeTextLen = this.editor.getValue().split(' ').length;\n\n    if (codeTextLen > 14000) {\n      // this.message.warning(this.translate.instant('edit.x_function.warn_max_code_size'));\n      return false;\n    }\n    return true;\n  }\n\n  public refreshCode(): void {\n    const codeText = this.editor.getValue();\n    const res = this.getParamByCode(codeText);\n    if (!res) {\n      return;\n    }\n    const { dataIn, dataOut } = res;\n    this.dataIn = dataIn;\n    this.dataOut = dataOut;\n  }\n\n\n\npublic setDefaultTemplate (dataIn, dataOut, codeText?): string {\n  return this.defaultTemplate;\n  // let template = codeText ? codeText : xfuncTemplate;\n\n  // let funcName = new RegExp(/X_FunctionBlock_Main\\(.*?\\)/);\n  // let funcReturn = new RegExp(/return\\s?\\(.*?\\)/);\n  // let defaultData = new RegExp(/[\\s\\S]*def X_FunctionBlock_Main/);\n\n  // let dataInStr = dataIn.join(',');\n  // let dataOutStr = dataOut.join(',');\n\n  // let defaultDataOutVal = ''\n  // dataOut.forEach(d => {\n  //   let str = `${d} = '{\"default\": \"default\"}' # output value must be a format json string \\n`;\n  //   defaultDataOutVal += str;\n  // })\n\n  // defaultDataOutVal = defaultDataOutVal + 'def X_FunctionBlock_Main';\n  // console.log(defaultDataOutVal);\n\n  // let res = template.replace(funcName, `X_FunctionBlock_Main(${dataInStr})`);\n  // let res2 = res.replace(funcReturn, `return (${dataOutStr})`);\n  // let res3;\n  // if(dataOut.length > 0) {\n  //   console.log(res2.match(defaultData))\n  //   res3 = res2.replace(defaultData, defaultDataOutVal);\n  // }\n  // return res3 || res2;\n  return '';\n}\n\npublic getParamByCode(code): any {\n  const funcName = new RegExp(/X_FunctionBlock_Main\\(.*?\\)/);\n  const funcReturn = new RegExp(/return\\s.*/);\n  const dataInstrs = code.match(funcName);\n  const dataOutStrs = code.match(funcReturn);\n  if (!dataInstrs || !dataOutStrs) {\n    return undefined;\n  }\n  const dataInStr = dataInstrs[0];\n  const dataOutStr = dataOutStrs[0];\n\n  const dataIn = dataInStr.substring(dataInStr.indexOf('(') + 1, dataInStr.indexOf(')')).split(',');\n  let dataOut = [];\n  console.log(dataOutStr);\n  if (dataOutStr.indexOf('(') !== -1 && dataOutStr.indexOf(')') !== -1) {\n    const str = dataOutStr.substring(dataOutStr.indexOf('(') + 1, dataOutStr.indexOf(')'));\n    if (str) {\n      dataOut = str.split(',').map(s => s.trim());\n    }\n  } else {\n    const res = dataOutStr.replace(/return\\s/, '');\n    dataOut = [res];\n  }\n  console.log(dataIn, dataOut);\n  this.trimArray(dataIn);\n  this.trimArray(dataOut);\n\n  return {\n    dataIn,\n    dataOut\n  };\n}\n\npublic trimArray(str): void {\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === '' || str[i] === null || typeof(str[i]) === undefined) {\n        str.splice(i, 1);\n        i = i - 1;\n    }\n  }\n}\n\n}\n","<div style='display: flex; flex-direction: column; height: 100%'>\n    <div class='navigation'>\n\n        <span style='position: absolute;left:50%;transform: translateX(-50%)'>Custom Function Block</span>\n      </div>\n      <div class='toolBar'>\n         <div class='toolBar-left'>\n            <div *ngIf='edited' class='dot'></div>\n            <div *ngIf='edited' style='margin-left: 0.31rem; font-weight: bold'>Editing...</div>\n         </div>\n         <div class='toolBar-right'>\n           <div class=\"path\">\n             <span>PATH:&nbsp;&nbsp;</span>\n             <input class=\"title-name\" type=\"text\" [(ngModel)]=\"model.path\"/>\n           </div>\n            \n            <div class='export' (click)=\"export()\">\n              <i class='icon_export'></i>Export\n            </div>    \n         </div>\n      </div>\n      <div class='xFunction-container'>\n          <div style='display: flex;height: 90%'>\n              <div class='xFunction-container-left'>\n                  <div class='block-name'><i class='icon_group'></i>FB Graph Editor</div>\n                  <div style=\"overflow-y: auto; flex: 1\">\n                    <!-- <div class='title' style=\"font-size: 1.2rem;\">\n                      \n                    </div> -->\n                    <input class=\"title-name\" type=\"text\" [(ngModel)]=\"model.name\" (ngModelChange)=\"onNameChange()\"/>\n                    <div class='edit-panel'>\n                      <!-- <div class='event'>\n                        <span class='left'>Event in</span>\n                        <span class='right'>Event out</span>\n                      </div> -->\n                      <div class='data'>\n                        <div class='dataIn'>\n                          <div class='left fill' *ngFor='let event of eventIn;let i = index'>\n                            {{event}}\n                            <span class='close' (click)='deleteEvent(0,i)'>x</span>\n                          </div>\n                          <div class='left plusData' (click)='addEventIn()'>+</div>\n                        </div>\n                        <div class='dataOut'>\n                          <div class='right fill' *ngFor='let event of eventOut;let i = index'>\n                            {{event}}\n                            <span class='close' (click)='deleteEvent(1,i)'>x</span>\n                          </div>\n                          <div class='right plusData' (click)='addEventOut()'>+</div>\n                        </div>\n                      </div>\n                      <div class='X-FB'>\n                      </div>\n                  \n                      <div class='data'>\n                        <div class='dataIn'>\n                          <div class='left fill' *ngFor='let data of dataIn;let i = index'>\n                            {{data}}\n                            <span class='close' (click)='deleteData(0,i)'>x</span>\n                          </div>\n                          <div class='left plusData' (click)='addDataIn()'>+</div>\n                        </div>\n                        <div class='dataOut'>\n                          <div class='right fill' *ngFor='let data of dataOut;let i = index'>\n                            {{data}}\n                            <span class='close' (click)='deleteData(1,i)'>x</span>\n                          </div>\n                          <div class='right plusData' (click)='addDataOut()'>+</div>\n                        </div>\n                      </div>\n                  \n                    </div>\n                  </div>\n            </div>\n            <div class='xFunction-container-right'>\n                  <div class='editor-title'>\n                    <div style='display: flex'>\n                        <i class='icon_code'></i>\n                        Code Editor\n                    </div>\n                    <!-- <i *ngIf='syncSuccess' class=icon_success> {{ 'edit.x_function.synchronous_success'| translate }}</i>\n                    <i *ngIf='syncFail' class=icon_fail>{{ 'edit.x_function.synchronous_failure'| translate }}</i> -->\n                    <div style='display: flex; align-items: center'>\n                        <i style='margin-right: 1.38rem' class='icon_undo' (click)='undo()'></i>\n                        <i style='margin-right: 1.38rem' class='icon_redo' (click)='redo()'></i>\n                        <div class='save_button' (click)='save()'>save</div>\n                    </div>\n                    <!-- <i class='icon_refresh' (click)='refreshCode()'></i> -->\n                  </div>\n                  <div id={{editorId}} class='editor'></div>\n                  <!-- <div class='button-list'>\n                    <button class='cancel' (click)='destroyModal()'>{{ 'common.cancel'| translate }}</button>\n                    <button class='saveAs' (click)='saveSkillas()' *ngIf='!isAdd'>{{ 'common.save_as'| translate }}</button>\n                    <button class='save' (click)='saveXFunction()'>{{ 'common.save'| translate }}</button>\n                  </div> -->\n            </div>\n          </div>\n\n      </div>\n</div>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}